{"ast":null,"code":"var _jsxFileName = \"d:\\\\practice\\\\facerecognition\\\\facerecognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Clarifai from 'clarifai';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'c9ed66bc9aa04765b0b91abb105f41e8'\n});\nconst particleoptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loaduser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculatefacelocation = data => {\n      const clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height); //console.log(width,height);\n\n      return {\n        leftCol: clarifaiface.left_col * width,\n        topRow: clarifaiface.top_row * height,\n        rightCol: width - clarifaiface.right_col * width,\n        bottomRow: height - clarifaiface.bottom_row * height\n      };\n    };\n\n    this.displaybox = box => {\n      // console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.oninputchange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onbuttonsubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displaybox(this.calculatefacelocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleoptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), this.state.route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      oninputchange: this.oninputchange,\n      buttonsubmit: this.onbuttonsubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageurl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loaduser: this.loaduser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["d:\\practice\\facerecognition\\facerecognition\\src\\App.js"],"names":["React","Component","Particles","Navigation","Signin","Register","FaceRecognition","Logo","Rank","ImageLinkForm","Clarifai","app","App","apiKey","particleoptions","particles","number","value","density","enable","value_area","constructor","loaduser","data","setState","user","id","name","email","entries","joined","calculatefacelocation","clarifaiface","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displaybox","box","oninputchange","event","input","target","onbuttonsubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport Rank from './Components/Rank/Rank';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Clarifai  from 'clarifai';\nimport './App.css';\nconst app = new Clarifai.App({\n apiKey: 'c9ed66bc9aa04765b0b91abb105f41e8'\n});\n\nconst particleoptions = {\n  particles: {\n      number : {\n        value : 100,\n        density : {\n          enable : true,\n          value_area : 800\n        }\n      }\n    }\n}\n\nclass App extends Component {\n  constructor()\n  {\n    super();\n    this.state = {\n      input:'',\n      imageUrl:'',\n      box:{},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id:'',\n        name:'',\n        email:'',\n        entries:0,\n        joined:''\n      }\n    }\n  }\n\n  loaduser = (data) =>{\n    this.setState({user: {\n      id:data.id,\n      name:data.name,\n      email:data.email,\n      entries:data.entries,\n      joined:data.joined\n\n    }})\n  }\n\ncalculatefacelocation = (data) => {\nconst clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\nconst image = document.getElementById('inputimage');\nconst width = Number(image.width);\nconst height = Number(image.height);\n//console.log(width,height);\nreturn {\n  leftCol: clarifaiface.left_col * width,\n  topRow: clarifaiface.top_row * height,\n  rightCol: width - (clarifaiface.right_col * width),\n  bottomRow: height - (clarifaiface.bottom_row * height)\n}\n}\n\ndisplaybox = (box) => {\n // console.log(box);\n  this.setState({box:box});\n}\n\n\noninputchange = (event) => {\nthis.setState({input:event.target.value})\n}\n\nonbuttonsubmit = () =>{\n  this.setState({imageUrl: this.state.input});\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n     this.state.input)\n    .then( response => this.displaybox( this.calculatefacelocation(response)))\n    .catch(err =>console.log(err));\n      \n}\nonRouteChange = (route) => {\n  if(route === 'signout'){\n    this.setState({isSignedIn: false})\n  }\n  else if(route === 'home'){\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route})\n}\n\n  render(){\n    const {isSignedIn, imageUrl, route, box}= this.state;\n  return (\n    <div className=\"App\">\n    <Particles className='particles'\n    params={particleoptions}/>\n      <Navigation isSignedIn = {isSignedIn} onRouteChange={this.onRouteChange} />\n      { this.state.route === 'home' ? \n       <div>\n        <Logo />\n        <Rank />\n        <ImageLinkForm  oninputchange={this.oninputchange} buttonsubmit={this.onbuttonsubmit}/>\n        <FaceRecognition box={box} imageurl = {imageUrl}/>\n      </div>\n      :(\n        route === 'signin' ? \n         <Signin onRouteChange={this.onRouteChange} />\n         :\n         <Register loaduser={this.loaduser} onRouteChange={this.onRouteChange} />\n        )\n     \n    }\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}